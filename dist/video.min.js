const playCanvasVideo = (anima) => {
    anima = {
        ...anima,
        images: {
            width: window.innerWidth,
            height: window.innerHeight,
            ...anima.images,
        },
    }
    if (!anima.target) { console.error('target is undefined'); return; }
    if (!anima.images) { console.error('images is undefined'); return; }

    const target = document.querySelector(anima.target);
    target.style.position = 'sticky';
    target.width = anima.images.width;
    target.height = anima.images.height;
    const ctx = target.getContext('2d');
    const images = [];
    let image;
    for (let i = 0; i < anima.images.count; i++) {
        image = new Image();
        image.src = anima.images.path + anima.images.filename + String(i).padStart(3, '0') + '.' + anima.images.extension
        image.style.width = anima.images.width;
        image.style.height = anima.images.height;
        images.push(image)
    }
    images[0].addEventListener('load', e => {
        ctx.drawImage(images[0], 0, 0, anima.images.width, anima.images.height)
    })

    const finAnimaCore = new FinAnimaCore();
    const inAnima = new FinAnima({
        func: (progress) => {
            const index = Math.floor(progress * anima.images.count);
            ctx.drawImage(images[index], 0, 0, anima.images.width, anima.images.height)
        },
        duration: 1,
        easingFunction: 'easeInSine',
        repeat: true,
    })
    finAnimaCore.addFinAnima(inAnima)


    return finAnimaCore

}
